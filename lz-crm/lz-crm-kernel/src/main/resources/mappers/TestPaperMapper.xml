<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lizhen.crm.kernel.dao.TestPaperMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.lizhen.crm.api.entity.TestPaper" id="testPaperMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="type" column="type"/>
        <result property="paperStatus" column="paper_status"/>
        <result property="score" column="score"/>
        <result property="questionCount" column="question_count"/>
        <result property="status" column="status"/>
        <result property="label" column="label"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="projectId" column="project_id"/>
        <result property="projectName" column="project_name"/>
        <result property="lessonId" column="lesson_id"/>
        <result property="lessonName" column="lesson_name"/>
    </resultMap>

    <select id="getScore" resultType="int">
        select sum(score) from test_question where id in
        <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <insert id="insertRelation" parameterType="map">
        insert into test_relation
        (question_id , paper_id) values
        <foreach collection="ids" item="item" separator=",">
            (#{item},#{id})
        </foreach>
    </insert>

    <delete id="deleteRelation" parameterType="int">
        delete from test_relation where paper_id = #{id}
    </delete>

    <select id="getQuestionId" resultType="int">
        select question_id from test_relation where paper_id = #{id}
    </select>

    <select id="getStaffPaperList" resultMap="testPaperMap" parameterType="int">
        SELECT
            t1.project_id,
            t2.lesson_id,
            t2.paper_id id,
            t3.name,
            t3.type,
            t4.score,
        IF
            ( ISNULL( t4.score ), 1, 2 ) status,
            t5.NAME project_name,
            t6.NAME lesson_name
        FROM
            de_project_staff t1
            INNER JOIN de_project_lesson_paper t2 ON t1.project_id = t2.project_id
            LEFT JOIN test_paper t3 ON t2.paper_id = t3.id
            LEFT JOIN st_paper_answer t4 ON t4.paper_id = t3.id
            AND t4.lesson_id = t2.lesson_id
            AND t4.project_id = t1.project_id
            AND t4.staff_id = t1.staff_id
            LEFT JOIN de_project_base t5 ON t1.project_id = t5.id
            LEFT JOIN de_class_lesson t6 ON t2.lesson_id = t6.id
        WHERE
	        t1.staff_id = #{staffId} UNION ALL
        (
        SELECT
            t1.project_id,
            NULL lesson_id,
            t2.paper_id id,
            t3.name,
            t3.type,
            t4.score,
        IF
            ( ISNULL( t4.score ), 1, 2 ) status,
            t5.NAME project_name,
            NULL lesson_name
        FROM
            de_project_staff t1
            INNER JOIN de_project_paper t2 ON t1.project_id = t2.project_id
            LEFT JOIN test_paper t3 ON t2.paper_id = t3.id
            LEFT JOIN st_paper_answer t4 ON t4.paper_id = t3.id
            AND t4.project_id = t1.project_id
            AND t4.staff_id = t1.staff_id
            LEFT JOIN de_project_base t5 ON t1.project_id = t5.id
        WHERE
        t1.staff_id =  #{staffId}
        )
    </select>
    <select id="getExamList"  parameterType="com.lizhen.common.request.RequestBase" resultType="com.lizhen.crm.api.dto.ExamResultDTO">
        select * from (
            SELECT
                t1.id projectId,
                NULL lessonId,
                t2.paper_id paperId,
                t3.NAME paperName,
                t3.type,
                t3.score,
                t3.question_count questionCount,
                t5.totalCount staffCount,
                t4.accessCount,
                concat( cast( accessCount * 100 / t5.totalCount AS DECIMAL ( 18, 1 ) ), "%" ) accessRate
            FROM
                de_project_base t1
                INNER JOIN de_project_paper t2 ON t1.id = t2.project_id
                LEFT JOIN test_paper t3 ON t2.paper_id = t3.id
                LEFT JOIN (
                SELECT
                    count( * ) accessCount,
                    project_id
                FROM
                    (
                    SELECT
                        t1.staff_id,
                        t1.paper_id,
                        t1.project_id,
                        t1.lesson_id,
                        t1.score,
                    IF
                        ( t1.score >= 0.6 * t2.score, 1, 2 ) result
                    FROM
                        st_paper_answer t1
                        LEFT JOIN test_paper t2 ON t1.paper_id = t2.id
                    WHERE
                        lesson_id IS NULL
                    ) t
                WHERE
                    result = 1
                GROUP BY
                    project_id
                ) t4 ON t1.id = t4.project_id
                LEFT JOIN (
                    SELECT
                    count( * ) totalCount,
                    project_id
                    FROM
                    st_paper_answer t1
                    WHERE
                    lesson_id IS NULL
                    GROUP BY
                    project_id
                ) t5 ON t1.id = t5.project_id
            WHERE
                t1.merchant_id =  #{merchantId} and t1.status=1 UNION ALL
                (
                SELECT
                    t1.id projectId,
                    t2.lesson_id lessonId,
                    t2.paper_id paperId,
                    t3.NAME paperName,
                    t3.type,
                    t3.score,
                    t3.question_count questionCount,
                    t5.totalCount staffCount,
                    t4.accessCount,
                    concat( cast( accessCount * 100 / staff_count AS DECIMAL ( 18, 1 ) ), "%" ) accessRate
                FROM
                    de_project_base t1
                    INNER JOIN de_project_lesson_paper t2 ON t1.id = t2.project_id
                    LEFT JOIN test_paper t3 ON t2.paper_id = t3.id
                    LEFT JOIN (
                    SELECT
                        count( * ) accessCount,
                        project_id,
                        lesson_id
                    FROM
                        (
                        SELECT
                            t1.staff_id,
                            t1.paper_id,
                            t1.project_id,
                            t1.lesson_id,
                            t1.score,
                        IF
                            ( t1.score >= 0.6 * t2.score, 1, 2 ) result
                        FROM
                            st_paper_answer t1
                            LEFT JOIN test_paper t2 ON t1.paper_id = t2.id
                        WHERE
                            lesson_id IS NOT NULL
                        ) t
                    WHERE
                        result = 1
                    GROUP BY
                        project_id,
                        lesson_id
                    ) t4 ON t1.id = t4.project_id
                    AND t2.lesson_id = t4.lesson_id
                    LEFT JOIN (
                        SELECT
                            count( * ) totalCount,
                            project_id,
                            lesson_id
                        FROM
                            st_paper_answer t1
                        WHERE
                            lesson_id IS NOT NULL
                        GROUP BY
                            project_id,
                            lesson_id
                    ) t5 ON t1.id = t5.project_id
                WHERE
                t1.merchant_id =  #{merchantId} and t1.status=1
                )
            ) t where 1=1
            <if test="name!=null  and name!='' ">
                AND t.paperName like concat("%",#{ name },"%")
            </if>
            <if test="type!=null ">
                AND t.type  = #{ type }
            </if>
    </select>

    <select id="getProjectPaperResult" resultType="com.lizhen.crm.api.dto.StaffExamResultDTO"  parameterType="com.lizhen.crm.api.dto.StaffExamResultDTO">
        SELECT
            t1.code staffCode,
            t1.name staffName,
            t1.id_card idCard,
            t1.phone,
            t4.score,
            t1.gender,
            t1.department_name departmentName,
            t1.id staffId,
            t2.project_id projectId,
            t3.paper_id paperId,
            t5.name paperName,
            DATE_FORMAT( t4.create_date, "%Y-%m-%d %H:%i:%s" ) createTime
        FROM
            de_staff t1
            LEFT JOIN de_project_staff t2 ON t1.id = t2.staff_id
            LEFT JOIN de_project_paper t3 ON t2.project_id = t3.project_id
            LEFT JOIN ( SELECT * FROM st_paper_answer WHERE lesson_id IS NULL ) t4 ON t4.project_id = t2.project_id
            AND t4.staff_id = t1.id
            LEFT JOIN test_paper t5 ON t5.id = t3.paper_id
        WHERE
            t1.merchant_id = #{merchantId}
            AND t3.paper_id = #{paperId}
            AND t2.project_id = #{projectId}
            AND t1.STATUS = 1
    </select>
    <select id="getProjectClassPaperResult" resultType="com.lizhen.crm.api.dto.StaffExamResultDTO" parameterType="com.lizhen.crm.api.dto.StaffExamResultDTO" >
        SELECT
            t1.code staffCode,
            t1.name staffName,
            t1.id_card idCard,
            t1.phone,
            t4.score,
            t1.gender,
            t1.department_name departmentName,
            t1.id staffId,
            t2.project_id projectId,
            t3.paper_id paperId,
            t3.lesson_id lessonId,
            t5.name paperName,
            DATE_FORMAT( t4.create_date, "%Y-%m-%d %H:%i:%s" ) createTime
        FROM
            de_staff t1
            LEFT JOIN de_project_staff t2 ON t1.id = t2.staff_id
            LEFT JOIN de_project_lesson_paper t3 ON t2.project_id = t3.project_id
            LEFT JOIN ( SELECT * FROM st_paper_answer WHERE lesson_id IS NOT NULL ) t4 ON t4.project_id = t2.project_id
            AND t4.staff_id = t1.id
            AND t4.lesson_id = t3.lesson_id
            LEFT JOIN test_paper t5 ON t5.id = t3.paper_id
        WHERE
            t1.merchant_id = #{merchantId}
            AND t3.paper_id =  #{paperId}
            AND t2.project_id = #{projectId}
            AND t3.lesson_id =  #{lessonId}
            AND t1.STATUS = 1
    </select>

    <select id="getExportProjectPaperResult" resultType="java.util.LinkedHashMap"  parameterType="com.lizhen.crm.api.dto.StaffExamResultDTO">
        SELECT
            ifnull( t5.name, "无" ) paperName,
            ifnull( t1.code, "无" )  staffCode,
            ifnull( t1.name, "无" )  staffName,
            ifnull( t1.id_card, "无" )   idCard,
            ifnull( t1.phone, "无" )  phone,
            ifnull( t1.social_no, "无" )  socialNo,
            ifnull( t4.score, "0" )  score,
            if(  t1.gender>1, "女" ,"男")  gender,
            ifnull( t1.department_name, "无" )  departmentName,
            DATE_FORMAT( t4.create_date, "%Y-%m-%d %H:%i:%s" ) createTime
        FROM
            de_staff t1
            LEFT JOIN de_project_staff t2 ON t1.id = t2.staff_id
            LEFT JOIN de_project_paper t3 ON t2.project_id = t3.project_id
            LEFT JOIN ( SELECT * FROM st_paper_answer WHERE lesson_id IS NULL ) t4 ON t4.project_id = t2.project_id
            AND t4.staff_id = t1.id
            LEFT JOIN test_paper t5 ON t5.id = t3.paper_id
        WHERE
            t1.merchant_id = #{merchantId}
            AND t3.paper_id = #{paperId}
            AND t2.project_id = #{projectId}
            AND t1.STATUS = 1
    </select>
    <select id="getExportProjectClassPaperResult" resultType="java.util.LinkedHashMap" parameterType="com.lizhen.crm.api.dto.StaffExamResultDTO" >
        SELECT
            ifnull( t5.name, "无" ) paperName,
            ifnull( t1.code, "无" )  staffCode,
            ifnull( t1.name, "无" )  staffName,
            ifnull( t1.id_card, "无" )   idCard,
            ifnull( t1.phone, "无" )  phone,
            ifnull( t1.social_no, "无" )  socialNo,
            ifnull( t4.score, "0" )  score,
            if(  t1.gender>1, "女" ,"男")  gender,
            ifnull( t1.department_name, "无" )  departmentName,
            DATE_FORMAT( t4.create_date, "%Y-%m-%d %H:%i:%s" ) createTime
        FROM
            de_staff t1
            LEFT JOIN de_project_staff t2 ON t1.id = t2.staff_id
            LEFT JOIN de_project_lesson_paper t3 ON t2.project_id = t3.project_id
            LEFT JOIN ( SELECT * FROM st_paper_answer WHERE lesson_id IS NOT NULL ) t4 ON t4.project_id = t2.project_id
            AND t4.staff_id = t1.id
            AND t4.lesson_id = t3.lesson_id
            LEFT JOIN test_paper t5 ON t5.id = t3.paper_id
        WHERE
            t1.merchant_id = #{merchantId}
            AND t3.paper_id =  #{paperId}
            AND t2.project_id = #{projectId}
            AND t3.lesson_id =  #{lessonId}
            AND t1.STATUS = 1
    </select>

    <select id="getPaperQuestionList"  resultType="com.lizhen.crm.api.dto.StaffExamQuestionDTO"  parameterType="com.lizhen.crm.api.dto.StaffExamResultDTO" >
            SELECT
                id,
                name,
                description,
                type,
                score,
                answer
            FROM
                test_question t1
                LEFT JOIN test_relation t2 ON t1.id = t2.question_id
            WHERE
                t2.paper_id = #{paperId}
    </select>

    <select id="getPaperAnswer"  resultType="com.lizhen.crm.api.entity.StPaperAnswer"  parameterType="com.lizhen.crm.api.dto.StaffExamResultDTO" >
            SELECT
                *
            FROM
                st_paper_answer
            WHERE
                project_id = #{projectId}
                AND staff_id = #{staffId}
                AND paper_id = #{paperId}
                limit 1
    </select>

</mapper>